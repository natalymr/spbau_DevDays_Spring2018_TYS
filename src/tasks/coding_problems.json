{"id": "1", "problem_name_t": "abacus-6", "legend":"Однажды, во время обеденного перерыва, Паша решил сходить в столовую главного корпуса Терлянского Публицистического Университета (ТПУ). Сделав свой заказ, он стал ждать, пока работница посчитает, сколько Паша должен заплатить. Для того, чтобы выполнить эту непростую задачу, она использовала счеты. \r\n\\begin{center}\r\n\\includegraphics[bb=0 0 200 280, scale=0.5]{abacus.png}\r\n\\end{center}\r\n\r\nСчеты представляют собой раму, имеющею восемь спиц, на которую нанизаны по девять костяшек. Каждый ряд костяшек представляет собой числовой разряд. Разряды расположены по возрастанию. Таким образом, нижняя спица представляет собой разряд единиц, а восьмая --- разряд десятков миллионов. Первоначально все костяшки сдвинуты \\textbf{вправо}, и результирующая сумма --- ноль. Сдвигая костяшки \\textbf{влево}, к результирующей сумме прибавляется разряд этой костяшки умноженный на их количество. \r\n\r\nПока вы изучали эту информацию, работница наконец-то сдвинула влево все нужные костяшки. Она назвала Паше сумму и показала ему счеты в подтверждение своих слов. Но, к сожалению, Павел настолько привык к современным калькуляторам, что он не умеет пользоваться счетами. И проверить правдивость слов работницы не может. Поэтому он просит помочь вас посчитать стоимость его обеда, используя счеты.","authorLogin":"LucienLachance","language":"russian","timeLimit":2000,"output":"Выведите одно число, которое показано на счетах. Гарантируется, что число, показанное на счетах, не превышает $10^{9}$","inputFile":"stdin","outputFile":"stdout","input":"На вход подается описание счетов по возрастанию разряда. Описание состоит из восьми строк, по одной на каждую спицу. В каждой строке находиться по одному числу $k$ ($0 \\leqslant k \\leqslant 9$) --- количество костяшек на текущей спице, которые находятся \\textbf{справа}.","authorName":"Vyacheslav Komarov","sampleTests":[{"output":"6788760","input":"9\r\n3\r\n2\r\n1\r\n1\r\n2\r\n3\r\n9\r\n"}],"name":"Счеты","interaction":null,"memoryLimit":268435456,"tutorial":""}
{"id": "2", "problem_name_t":"bfs-5","scoring":null,"notes":"","legend":"В стране бедствие. В городе Снов взорвался самый крупный химический завод, и теперь ядовитое облако движется по всей стране. Облако движется с такой скоростью, что преодолевает расстояние между двумя соседними городами за один час. Соседними городами считаются города, соединённые дорогой. Ваша задача --- для каждого города рассчитать, через какое время после взрыва город будет заражён.","authorLogin":"Taube","language":"russian","timeLimit":3000,"output":"Для каждого города в отдельной строке выведите искомое время. Если город не будет заражён, выведите $1000000000$.","inputFile":"stdin","outputFile":"stdout","input":"В первой строке входных данных даны два числа $n$ и $m$ --- количество городов и количество дорог соответственно. $(1 \\leqslant n \\leqslant 10^5, 1 \\leqslant m \\leqslant 3 \\cdot 10^5)$. В следующей строке дан номер, которым обозначается город Снов. В каждой из следующих строк даны по два числа $v_i$ и $u_i$ --- города, соединённые дорогой. Гарантируется, что между любыми двумя городами проходит не более одной дороги.","authorName":"Golub Olesya","sampleTests":[{"output":"1\n2\n2\n1\n2\n0\n","input":"6 6\n6\n1 5\n2 1\n4 6\n1 3\n6 1\n4 2\n"},{"output":"0\n1\n1\n1000000000\n1000000000\n1000000000\n","input":"6 6\n1\n2 1\n3 1\n6 4\n3 2\n6 5\n5 4\n"}],"name":"Облако","interaction":null,"memoryLimit":268435456,"tutorial":""}
{"id": "3", "problem_name_t" :"connected-components-1", "timeLimit":2000,"input":"Первая строка входных данных содержит два числа $n$ и $m$ --- количество вершин и количество рёбер в графе $(1 \\leqslant n \\leqslant 10^5, 0 \\leqslant m \\leqslant 2 \\cdot 10^5)$. Каждая из $m$ следующих строк содержит по два числа $v_i$ и $u_i$ --- описание ребра.","sampleTests":[{"input":"4 2\r\n1 3\r\n2 4\r\n","output":"2\r\n2 1 2 1 "},{"input":"5 5\r\n1 2\r\n1 3\r\n3 2\r\n1 4\r\n5 3\r\n","output":"1\r\n1 1 1 1 1 "}],"legend":"Вам дан неориентированный граф с $n$ вершинами и $m$ рёбрами. Ваша задача --- определить для каждой вершины номер её компоненты связности.","outputFile":"stdout","name":"Компоненты связности","authorName":"Golub Olesya","inputFile":"stdin","tutorial":"","language":"russian","notes":"","output":"В первой строке выведите единственное число $l$ --- количество компонент связности графа. На следующей строке выведите $n$ чисел от $1$ до $l$ --- номера компонент связности, которым принадлежат соответствующие вершины. Номера компонент должны нумероваться от $1$ до $l$ произвольным образом.","authorLogin":"Taube","memoryLimit":268435456}
{"id": "4", "problem_name_t":"connected-graph-2","scoring":null,"notes":"","legend":"Вам дан неориентированный граф из $n$ вершин и $m$ рёбер. Ваша задача --- проверить его на связность.","authorLogin":"Taube","language":"russian","timeLimit":2000,"output":"В единственной строке выведите \"Yes\" без кавычек, если граф связный, и \"No\" без кавычек в противном случае.","inputFile":"stdin","outputFile":"stdout","input":"В первой строке даны два числа $n$ и $m$ --- число вершин и число рёбер в графе соответственно $(1 \\leqslant n, m \\leqslant 10^5)$. В каждой из следующих $m$ строк даны по два числа $v_i$, $u_i$ --- рёбра графа $(1 \\leqslant v_i, u_i \\leqslant n)$. В графе могут присутствовать петли и кратные рёбра.","authorName":"Golub Olesya","sampleTests":[{"output":"Yes\r\n","input":"3 2\r\n1 2\r\n3 2\r\n"},{"output":"No\r\n","input":"3 1\r\n1 3\r\n"}],"name":"Связность","interaction":null,"memoryLimit":268435456,"tutorial":""}
{"id": "5", "problem_name_t":"dominoes-25","scoring":null,"notes":"The following image shows how to place dominoes in the first sample:\n\\begin{center}\n\\includegraphics[bb=0 0 240 100, scale=1.0]{dominoes.png}\n\\end{center}","legend":"Pasha has a board of size $n \\times m$. Some cells are colored black, some --- colored green, all remaining cells are colored white. Also, Pasha has a typical domino set consisting of 28 dominoes. He wants to place some of this dominoes on the board in the following way:\n\n\\begin{itemize}\n\n\\item Each domino occupies exactly two neighboring cells;\n\\item Each non-black cell is occupied with exactly one domino;\n\\item There is no black cell occupied with domino;\n\\item The total number of dots on the green cells $g$ is maximized.\n\n\\end{itemize}\n\nYou are to write a program to find the maximum possible value of $g$ for the given board.","authorLogin":"KhaustovPavel","language":"english","timeLimit":2000,"output":"For each test case output its number and then the maximum value of $g$. If it is impossible to place dominoes in the described way --- output ``\\texttt{No~solution}'' instead. Follow the format of the sample output.","inputFile":"stdin","outputFile":"stdout","input":"There will be multiple test cases in the input. Each test case starts with two positive integers $n$ and $m$ ($1 \\leq n \\cdot m \\leq 56$). The following $n$ lines contain $m$ characters each. The $i$-th line describes the $i$-th row of the board: `\\texttt{W}' denotes the white cell, `\\texttt{B}' --- the black cell and `\\texttt{G}' --- the green cell. Each board contains at least one green cell. The last test case is followed by a line that contains two zeroes. It must not be processed. There will be no more than $100$ test cases in the input.","authorName":"Pavel Khaustov","sampleTests":[{"output":"Case 1: 18\nCase 2: No solution\n","input":"4 4\nGWWW\nGWWB\nBWWB\nBWWG\n1 3\nWGW\n0 0\n"}],"name":"Dominoes","interaction":null,"memoryLimit":268435456,"tutorial":""}
{"id": "6", "problem_name_t":"fibonacci-sequence-1fi","notes":"Последовательность из первого примера:\n2 3 5 8 13 21","legend":"Студент Вячеслав сидел на очередной скучной паре матанализа. Скребко Элеонора Николаевна  --- его преподаватель, сегодня начала новую тему --- последовательности. Во время пары она дала множество формул образующих последовательности, и примеры к ним...\n\nВ конце пары Элеонора Николаевна дала задание на дом: необходимо было найти первый член последовательности, зная только: длину последовательности, последний и предпоследний ее члены. Она дала множество таких задач и в конце написала формулу по которой вычисляются члены этих последовательностей\n$$p_{i} = (p_{i-1} + p_{i-2})$$\n\nЧтобы подготовиться к следующей паре, которая будет уже завтра, Вячеславу необходимо решить эти задачи, но он очень торопится на день рождения к другу, поэтому просит вас помочь ему\n\n","authorLogin":"LucienLachance","language":"russian","timeLimit":2000,"output":"Вывести одно число: $a_{1}$ --- первый член последовательности","inputFile":"stdin","outputFile":"stdout","input":"Входные данные состоят из трех целых чисел:\n$n$, $a_{n}$, $a_{n-1}$ --- длина последовательности, последний и предпоследний члены последовательности соответственно, ($2 \\leqslant n \\leqslant 50$), ($1 \\leqslant a_{i} \\leqslant 10^9$) - для всех $i$","authorName":"Vyacheslav Komarov","sampleTests":[{"output":"2","input":"6 21 13\n"}],"name":"Задание на дом","interaction":null,"memoryLimit":268435456,"tutorial":""}
{"id": "7", "problem_name_t":"houses-4",  "notes":"","legend":"Один известный университет сокращает количество общежитий. Их осталось всего 8! Также, университет усилил бдительность в отношении проживающих. Руководство университета не хочет, чтобы  в общежития нелегально пробирались другие студенты. Для этого им необходимо знать, сколько человек проживает в каждом общежитии, чтобы сверить это количество со значением в журнале. \r\n\r\nИзвестно, что всего в общежитиях проживает 5000 студентов. В первом общежитии проживает 500 студентов, в третьем --- вдвое больше, в пятом --- на 300 человек больше, чем в первом, в седьмом --- на 150 человек меньше, чем в третьем, во втором --- столько же, сколько в 7, в четвертом --- на 220 человек меньше, чем в пятом, шестое --- под ремонтом, в нем никто не живет, а в восьмом общежитии проживают все остальные студенты. \r\nПомогите комиссии выяснить, сколько студентов проживает в общежитиях.","authorLogin":"ASK_YI","language":"russian","timeLimit":2000,"output":"Выходные данные должны содержать единственное целое число --- количество студентов, проживающих в общежитии под номером $n$.","inputFile":"stdin","outputFile":"stdout","input":"Единственная строка входных данных содержит одно целое число $n$ ($1 \\leqslant n \\leqslant 8$) --- номер общежития, количество жильцов которого необходимо вывести.","authorName":"Anastasia Kuznetsova","sampleTests":[{"output":"500","input":"1\r\n"}],"name":"Общежития","interaction":null,"memoryLimit":268435456,"tutorial":""}
{"id": "8", "problem_name_t":"kindergarden-3", "timeLimit":2000,"input":"В первой строке входного файла записано число $N$ ($1 \\leqslant N \\leqslant 100$), где N --- количество детей. В следующей строки записано $N$ чисел $a_{i}$ --- числа, выбранные другими детьми ($1 \\leqslant a_{i} \\leqslant 100$).","sampleTests":[{"input":"2\n1 5\n","output":"5\n"},{"input":"5\n1 3 7 7 1\n","output":"7\n"}],"legend":"В Пензенском Детском Учреждении каждый ребенок выбрал себе любимое число. Максим очень хитрый мальчик, и он заранее узнал все числа, которые выбрали другие ребята. Он хочет выбрать себе такое число, которое было бы больше, чем у других детей. Но так как ему всего три года, он просит вашей помощи в выборе числа.    ","outputFile":"stdout","name":"Максим и число","authorName":"nicolay kuzivanov","inputFile":"stdin","tutorial":"","language":"russian","notes":"","output":"Выведите наибольшее число, выбранное другими детьми, чтобы помочь определиться Максиму. ","authorLogin":"nicolay","memoryLimit":268435456}
{"id": "9", "problem_name_t":"large-array-12", "scoring":null,"notes":"В приведённом примере изначальный массив выглядит следующим образом: ${2, 4, 0, 0, 0, 3, 1, 2, 7, 1}$","legend":"Олеся и Настя участвуют в конкурсе самых красивых массивов. Как известно, самые красивые массивы --- те, в которых элементы расположены в порядке неубывания.\n\nНесколько недель продолжался этот конкурс, и вот, наконец, наступил долгожданный финал. В качестве задания на финал организаторы дали участникам огромный массив $q$, состоящий из $n$ элементов. \n\nМассив $q$, который был предложен организаторами, заполняется значениями по правилу:\n\n$$q_{i} = (a^{i} \\mod b) \\mod c$$\n\nгде $\\mod$ обозначает операцию взятия остатка от деления, $a$, $b$ и $c$ --- заданные целые числа, а для номера элемента массива $i$ выполняется ограничение $1 \\leqslant i \\leqslant n$.\n\nДевочки трудились всю ночь, но так и не смогли отсортировать все его элементы в порядке неубывания.\n\nОчень скоро явятся организаторы и будут задавать вопросы вида <<Какой элемент массива $q$ после сортировки находится на позиции с номером $p_{i}$>>. Сможете ли вы помочь Насте и Олесе ответить на все эти вопросы? ","authorLogin":"LucienLachance","language":"russian","timeLimit":2000,"output":"Выведите через пробел $k$ целых чисел --- ответы на вопросы организаторов в хронологическом порядке.","inputFile":"stdin","outputFile":"stdout","input":"В первой строке входных данных находятся числа $n$, $a$, $b$, $c$, $k$ --- длина массива, параметры генератора массива и количество вопросов соответственно ($1 \\leqslant n \\leqslant 3 \\cdot 10^{7}, 1 \\leqslant a, b \\leqslant 10^{9}, 1 \\leqslant c \\leqslant 1000, 1 \\leqslant k \\leqslant 10^{5}$).\n\nВо второй строке входных данных находится $k$ целых чисел $p_i$  --- индексы элементов, значения которых хотят узнать организаторы ($1 \\leqslant p_{i} \\leqslant n$).","authorName":"Vyacheslav Komarov","sampleTests":[{"output":"0\n7\n1\n1\n","input":"10 2 37 8 4\n3 10 4 5\n"}],"name":"Огромный массив","interaction":null,"memoryLimit":268435456,"tutorial":""}
{"id": "10", "problem_name_t":"lost-streets-13","scoring":null,"notes":"","legend":"Компания РДЖ запланировала построить в стране новую железнодорожную сеть. В этой стране имеется $n$ городов. РДЖ запланировала построить $m$ новых двунаправленных дорог, которые будут соединять города этой страны. Разумеется, на строительство сети планируется потратить как можно меньше средств из бюджета, поэтому был составлен план строительства, где был произведен расчет кратчайших расстояний между каждой парой городов.\n\nПлан представляет собой матрицу, где на пересечении $i$-ой и $j$-ой строки записано число, равное кратчайшему расстоянию между городами $i$ и $j$. \n\nЖелезнодорожная сеть представляет собой набор участков железной дороги, каждый участок соединяет два различных города. Между двумя любыми городами существует не более одного участка железной дороги.\n\nПомогите восстановить дорожную сеть между городами, если возможно построить её согласно плану. ","authorLogin":"Yuliy","language":"russian","timeLimit":2000,"output":"Если такая сеть существует, выведите в первой строке сообщение <<\\texttt{YES}>> (без кавычек), в противном случае --- сообщение <<\\texttt{NO}>> (без кавычек). Если сеть существует, то, начиная со второй строки, выведите $m$ троек целых чисел, описывающих участки железной дороги. Каждый участок железной дороги описывается номерами городов, которые им соединяются и его длину. Длина любого участка должна быть \\textbf{положительна} и не должна превышать $10^{6}$.","inputFile":"stdin","outputFile":"stdout","input":"В первой строке входных данных даны два целых числа $n$ и $m$ --- количество городов и дорог в стране ($1 \\leqslant n \\leqslant 500$, $0 \\leqslant m \\leqslant 2000$). В последующих $n$ строках содержится таблица кратчайших расстояний между каждой парой городов, элементы таблицы --- целые неотрицательные числа, не превышающие $10^{6}$.","authorName":"Yuliy Iovlev","sampleTests":[{"output":"YES\n2 1 1\n1 3 2\n2 4 4\n1 4 5\n","input":"4 4\n0 1 2 5\n1 0 3 4\n2 3 0 7\n5 4 7 0\n"},{"output":"NO\n","input":"3 2\n0 1 1\n1 0 1\n1 1 0\n"}],"name":"Потерянные улицы","interaction":null,"memoryLimit":268435456,"tutorial":""}
{"id": "11", "problem_name_t":"missing-battleship-5","scoring":null,"notes":"","legend":"Дима очень любит играть в морской бой, и сейчас он собирается сражаться с Геной. Он уже нарисовал поле размером $10 \\times 10$ и расположил некоторые корабли на нём.\n\nПравила игры гласят, что на поле должны располагаться:\n\n\\begin{itemize}\n\\item один четырёхпалубный корабль;\n\\item два трёхпалубных корабля;\n\\item три двухпалубных корабля;\n\\item четыре однопалубных корабля.\n\\end{itemize}\n\nКорабли не должны иметь общих или соседних по стороне или по углу клеток. Пример корректного расположения изображён ниже.\n\n\\begin{center}\n\\includegraphics[bb=0 0 380 380,scale=0.3]{battleship_sample.png}\n\\end{center}\n\nДима заметил, что сейчас на его поле изображены \\textbf{девять} кораблей, и они не нарушают правила игры. Но по правилам кораблей должно быть \\textbf{десять}, и это означает, что на поле не хватает одного корабля.\n\nВам задано изображение поля. Определите, из скольких клеток состоит недостающий корабль.","authorLogin":"noxwell","language":"russian","timeLimit":2000,"output":"В единственной строке выходных данных требуется вывести единственное целое число --- размер недостающего корабля.","inputFile":"stdin","outputFile":"stdout","input":"Во входных данных задано изображение поля, состоящее из десяти строк, по десять символов в каждой. Символ `\\texttt{\\#}' означает занятую кораблём клетку, а символ `\\texttt{.}' (точка) означает свободную клетку. Гарантируется, что расстановка кораблей не нарушает правила игры.","authorName":"Alexey Vetrov","sampleTests":[{"output":"2","input":"\\#\\#.\\#....\\#.\n...\\#......\n...\\#..\\#..\\#\n.........\\#\n..........\n\\#........\\#\n.........\\#\n\\#........\\#\n..........\n......\\#\\#\\#\\#\n"}],"name":"Морской бой","interaction":null,"memoryLimit":268435456,"tutorial":""}
{"id": "12","problem_name_t": "movie-5", "timeLimit":2000,"input":"Во входных данных заданы два целых числа --- $X$ и $Y$ ($1 \\leqslant X, Y \\leqslant 100$).","sampleTests":[{"input":"5 5\n","output":"BGBGBGBGBG"},{"input":"5 3\n","output":"BGBBGBBG"},{"input":"100 1\n","output":"NO SOLUTION"}],"legend":"$X$ мальчиков и $Y$ девочек пошли в кинотеатр и купили билеты на подряд идущие места в одном ряду. Напишите программу, которая вычислит, как нужно сесть мальчикам и девочкам, чтобы рядом с каждым мальчиком сидела хотя бы одна девочка, а рядом с каждой девочкой --- хотя бы один мальчик.\n\n\n","outputFile":"stdout","name":"Кинотеатр","authorName":"nicolay kuzivanov","inputFile":"stdin","tutorial":"","language":"russian","notes":"","output":"Выведите любую строку, в которой будет ровно $X$ символов <<\\texttt{B}>>, обозначающих мальчиков, и $Y$ символов <<\\texttt{G}>>, обозначающих девочек, удовлетворяющую условию задачи. Пробелы между символами выводить не нужно.\n\nЕсли рассадить мальчиков и девочек согласно условию задачи невозможно, в выходной файл должна быть записана строка <<\\texttt{NO SOLUTION}>> (без кавычек).\n","authorLogin":"nicolay","memoryLimit":268435456}
{"id": "13", "problem_name_t":"palindrom-5", "timeLimit":2000,"input":"В первой строке входного файла записано число $N$ ($1 \\leqslant N \\leqslant 100000$). Во второй строке записана последовательность из $N$ больших латинских букв (буквы записаны без пробелов).","sampleTests":[{"input":"3\nAAB\n","output":"ABA"},{"input":"6\nQAZQAZ\n","output":"AQZZQA"},{"input":"6\nABCDEF\n","output":"A"}],"legend":"Палиндром --- это строка, которая читается одинаково как справа налево, так и слева направо.\n\nВо входном файле записан набор больших латинских букв (не обязательно различных). Разрешается переставлять буквы, а также удалять некоторые буквы. Требуется написать программу, которая из данных букв по указанным правилам составит палиндром наибольшей длины, а если таких палиндромов несколько, то первый в алфавитном порядке.\n","outputFile":"stdout","name":"Палиндром","authorName":"nicolay kuzivanov","inputFile":"stdin","tutorial":"","language":"russian","notes":"","output":"В единственной строке выходного файла выведите искомый палиндром. ","authorLogin":"nicolay","memoryLimit":268435456}
{"id": "14", "problem_name_t":"segment-tree-min-max-3","scoring":null,"notes":"","legend":"В начальный момент времени последовательность $a$ задана следующей формулой: \n\n$a_n$ = $n^{2}$ $mod$ $12345$ + $n^{3}$ $mod$ $23456$\n\nТребуется отвечать на запросы следующего вида:\n\n\\begin{enumerate}\n\\item Найти разность между минимальным и максимальным элементом на выбранном отрезке.\n\\item Присвоить элементу в массиве введённое значение.\n\\end{enumerate}","authorLogin":"Taube","language":"russian","timeLimit":2000,"output":"Дли каждого запроса первого типа необходимо в отдельной строке вывести разность между максимальным и минимальным значением на соответствующем отрезке.","inputFile":"stdin","outputFile":"stdout","input":"Первая строка входных данных содержит натуральное число $k$ --- количество запросов $(k \\leqslant 10^5)$. Следующие $k$ строк содержат запросы, по одному на строке. Запрос номер $i$ описывается двумя целыми числами $x_i$, $y_i$.\n\nЕсли $x_i \\geq 1$, то требуется найти разность между максимальным и минимальным значением среди элементов, находящихся на позициях с $x_i$ по $y_i$. При этом $1 \\leqslant x_i, y_i \\leqslant 10^5$.\n\nЕсли $x_i \\leq $-$1$, то требуется присвоить элементу $a_{|x_i|}$ значение $y_i$. При этом $|x_i|, |y_i| \\leq 10^5$.","authorName":"Golub Olesya","sampleTests":[{"output":"34\n68\n250\n234\n1\n","input":"7\n1 3\n2 4\n-2 -100\n1 5\n8 9\n-3 -101\n2 3\n"}],"name":"Разность","interaction":null,"memoryLimit":268435456,"tutorial":""}
{"id": "15","problem_name_t":"shmoogle-3","scoring":null,"notes":"","legend":"Алексей всегда мечтал создать собственную поисковую систему. И вот настал день, к запуску готовится поисковая система <<\\texttt{Shmoogle}>>. Осталась лишь маленькая деталь. Где-то, возможно во сне, Алексей увидел оригинальную идею --- отображать столько букв `\\texttt{o}' в названии своей поисковой системы, сколько страниц содержит её ответ на запрос.\r\n\r\nАлексей не слишком силен в решении подобных задач, ему интересно, как будет выглядеть название его поисковой системы, если её ответ содержит $n$ записей, а на страницу помещается не более $m$ записей. Помогите ему ответить на этот вопрос --- напишите программу, которая для известных значений $n$ и $m$ определит написание названия поисковой системы.","authorLogin":"KhaustovPavel","language":"russian","timeLimit":2000,"output":"Единственная строка выходных данных должна содержать название поисковой системы Алексея с нужным количеством букв `\\texttt{o}'.","inputFile":"stdin","outputFile":"stdout","input":"В единственной строке выходных данных содержится два целых числа $n$ и $m$ --- количество записей в ответе системы и ограничение на количество записей для одной страницы ($1 \\leqslant n, m \\leqslant 100$).","authorName":"Pavel Khaustov","sampleTests":[{"output":"Shmoogle\r\n","input":"5 3\r\n"},{"output":"Shmooogle\r\n","input":"5 2\r\n"}],"name":"Shmoogle","interaction":null,"memoryLimit":268435456,"tutorial":""}
{"id": "16", "problem_name_t":"subway-5","timeLimit":2000,"input":"Во первой строке входных данных записано число $N$ --- количество станций метро в городе ($1 \\leqslant N \\leqslant 100$).\nВо второй строке задано число $M$ --- количество линий метро ($1 \\leqslant M \\leqslant 20$).\nДалее идет описание $M$ линий. Описание каждой линии расположено на отдельной строке и состоит из числа $P_{i}$ --- количества станций на этой линии ($1 \\leqslant P_{i} \\leqslant 50$) и $P_{i}$ чисел, задающих номера станций, через которые проходит линия. Линия никогда не проходит через одну и ту же станцию дважды.\nВ конце файла записаны два различных числа: $A$ --- номер начальной станции, и $B$ --- номер станции, на которую нам нужно попасть.\n","sampleTests":[{"input":"5\n2\n4 1 2 3 4\n2 5 3\n3 1\n","output":"0"},{"input":"5\n5\n2 1 2\n2 1 3\n2 2 3\n2 3 4\n2 4 5\n1 5\n","output":"2"},{"input":"10\n2\n6 1 3 5 7 4 9\n6 2 4 6 8 10 7\n3 8\n","output":"1"},{"input":"4\n2\n2 1 2\n2 3 4\n1 3\n","output":"-1"}],"legend":"Метрополитен состоит из нескольких линий метро. Все станции метро в городе пронумерованы натуральными числами от 1 до $N$. На каждой линии расположено несколько станций. Если одна и та же станция расположена сразу на нескольких линиях, то она является станцией пересадки, и на этой станции можно пересесть с любой линии, которая через нее проходит, на любую другую, опять же, проходящую через нее.\n\nНапишите программу, которая по данному вам описанию метрополитена определит, с каким минимальным числом пересадок можно добраться со станции $A$ на станцию $B$. Если со станции A на станцию B добраться невозможно, ваша программа должна вывести \\texttt{-1}.\n","outputFile":"stdout","name":"Метро","authorName":"nicolay kuzivanov","inputFile":"stdin","tutorial":"","language":"russian","notes":"","output":"Выведите минимальное требуемое количество пересадок. Если добраться со станции $A$ на станцию $B$ невозможно, то следует вывести единственное число \\texttt{–1} (минус единица).","authorLogin":"nicolay","memoryLimit":268435456}
