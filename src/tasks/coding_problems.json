{"difficulty_livel": 5, "notes":"The following image shows how to place dominoes in the first sample:\n\\begin{center}\n\\includegraphics[bb=0 0 240 100, scale=1.0]{dominoes.png}\n\\end{center}","legend":"Pasha has a board of size $n \\times m$. Some cells are colored black, some --- colored green, all remaining cells are colored white. Also, Pasha has a typical domino set consisting of 28 dominoes. He wants to place some of this dominoes on the board in the following way:\n\n\\begin{itemize}\n\n\\item Each domino occupies exactly two neighboring cells;\n\\item Each non-black cell is occupied with exactly one domino;\n\\item There is no black cell occupied with domino;\n\\item The total number of dots on the green cells $g$ is maximized.\n\n\\end{itemize}\n\nYou are to write a program to find the maximum possible value of $g$ for the given board.","language":"english","timeLimit":2000ms,"output":"For each test case output its number and then the maximum value of $g$. If it is impossible to place dominoes in the described way --- output ``\\texttt{No~solution}'' instead. Follow the format of the sample output.","inputFile":"stdin","outputFile":"stdout","input":"There will be multiple test cases in the input. Each test case starts with two positive integers $n$ and $m$ ($1 \\leq n \\cdot m \\leq 56$). The following $n$ lines contain $m$ characters each. The $i$-th line describes the $i$-th row of the board: `\\texttt{W}' denotes the white cell, `\\texttt{B}' --- the black cell and `\\texttt{G}' --- the green cell. Each board contains at least one green cell. The last test case is followed by a line that contains two zeroes. It must not be processed. There will be no more than $100$ test cases in the input.","sampleTests":[{"output":"Case 1: 18\nCase 2: No solution\n","input":"4 4\nGWWW\nGWWB\nBWWB\nBWWG\n1 3\nWGW\n0 0\n"}],"problems_name":"Dominoes","memoryLimit":268435456}, 
{"difficulty_level":3,"notes":"","legend":"Компания РДЖ запланировала построить в стране новую железнодорожную сеть. В этой стране имеется $n$ городов. РДЖ запланировала построить $m$ новых двунаправленных дорог, которые будут соединять города этой страны. Разумеется, на строительство сети планируется потратить как можно меньше средств из бюджета, поэтому был составлен план строительства, где был произведен расчет кратчайших расстояний между каждой парой городов.\n\nПлан представляет собой матрицу, где на пересечении $i$-ой и $j$-ой строки записано число, равное кратчайшему расстоянию между городами $i$ и $j$. \n\nЖелезнодорожная сеть представляет собой набор участков железной дороги, каждый участок соединяет два различных города. Между двумя любыми городами существует не более одного участка железной дороги.\n\nПомогите восстановить дорожную сеть между городами, если возможно построить её согласно плану. ","language":"russian","timeLimit":2000ms,"output":"Если такая сеть существует, выведите в первой строке сообщение <<\\texttt{YES}>> (без кавычек), в противном случае --- сообщение <<\\texttt{NO}>> (без кавычек). Если сеть существует, то, начиная со второй строки, выведите $m$ троек целых чисел, описывающих участки железной дороги. Каждый участок железной дороги описывается номерами городов, которые им соединяются и его длину. Длина любого участка должна быть \\textbf{положительна} и не должна превышать $10^{6}$.","inputFile":"stdin","outputFile":"stdout","input":"В первой строке входных данных даны два целых числа $n$ и $m$ --- количество городов и дорог в стране ($1 \\leqslant n \\leqslant 500$, $0 \\leqslant m \\leqslant 2000$). В последующих $n$ строках содержится таблица кратчайших расстояний между каждой парой городов, элементы таблицы - целые неотрицательные числа, не превышающие $10^{6}$.", "sampleTests":[{"output":"YES\n2 1 1\n1 3 2\n2 4 4\n1 4 5\n","input":"4 4\n0 1 2 5\n1 0 3 4\n2 3 0 7\n5 4 7 0\n"},{"output":"NO\n","input":"3 2\n0 1 1\n1 0 1\n1 1 0\n"}],"problems_name":"Потерянные улицы","memoryLimit":268435456},
{"difficulty_level":1,"notes":"","legend":"Дима очень любит играть в морской бой, и сейчас он собирается сражаться с Геной. Он уже нарисовал поле размером $10 \\times 10$ и расположил некоторые корабли на нём.\n\nПравила игры гласят, что на поле должны располагаться:\n\n\\begin{itemize}\n\\item один четырёхпалубный корабль;\n\\item два трёхпалубных корабля;\n\\item три двухпалубных корабля;\n\\item четыре однопалубных корабля.\n\\end{itemize}\n\nКорабли не должны иметь общих или соседних по стороне или по углу клеток. Пример корректного расположения изображён ниже.\n\n\\begin{center}\n\\includegraphics[bb=0 0 380 380,scale=0.3]{battleship_sample.png}\n\\end{center}\n\nДима заметил, что сейчас на его поле изображены \\textbf{девять} кораблей, и они не нарушают правила игры. Но по правилам кораблей должно быть \\textbf{десять}, и это означает, что на поле не хватает одного корабля.\n\nВам задано изображение поля. Определите, из скольких клеток состоит недостающий корабль.","language":"russian","timeLimit":2000ms,"output":"В единственной строке выходных данных требуется вывести единственное целое число --- размер недостающего корабля.","inputFile":"stdin","outputFile":"stdout","input":"Во входных данных задано изображение поля, состоящее из десяти строк, по десять символов в каждой. Символ `\\texttt{\\#}' означает занятую кораблём клетку, а символ `\\texttt{.}' (точка) означает свободную клетку. Гарантируется, что расстановка кораблей не нарушает правила игры.","sampleTests":[{"output":"2","input":"\\#\\#.\\#....\\#.\n...\\#......\n...\\#..\\#..\\#\n.........\\#\n..........\n\\#........\\#\n.........\\#\n\\#........\\#\n..........\n......\\#\\#\\#\\#\n"}],"problems_name":"Морской бой","memoryLimit":268435456},
{"difficulty_level":3,"notes":"","legend":"В начальный момент времени последовательность $a$ задана следующей формулой: \n\n$a_n$ = $n^{2}$ $mod$ $12345$ + $n^{3}$ $mod$ $23456$\n\nТребуется отвечать на запросы следующего вида:\n\n\\begin{enumerate}\n\\item Найти разность между минимальным и максимальным элементом на выбранном отрезке.\n\\item Присвоить элементу в массиве введённое значение.\n\\end{enumerate}","language":"russian","output":"Дли каждого запроса первого типа необходимо в отдельной строке вывести разность между максимальным и минимальным значением на соответствующем отрезке.","inputFile":"stdin","outputFile":"stdout","input":"Первая строка входных данных содержит натуральное число $k$ --- количество запросов $(k \\leqslant 10^5)$. Следующие $k$ строк содержат запросы, по одному на строке. Запрос номер $i$ описывается двумя целыми числами $x_i$, $y_i$.\n\nЕсли $x_i \\geq 1$, то требуется найти разность между максимальным и минимальным значением среди элементов, находящихся на позициях с $x_i$ по $y_i$. При этом $1 \\leqslant x_i, y_i \\leqslant 10^5$.\n\nЕсли $x_i \\leq $-$1$, то требуется присвоить элементу $a_{|x_i|}$ значение $y_i$. При этом $|x_i|, |y_i| \\leq 10^5$.","sampleTests":[{"output":"34\n68\n250\n234\n1\n","input":"7\n1 3\n2 4\n-2 -100\n1 5\n8 9\n-3 -101\n2 3\n"}],"problems_name":"Разность","memoryLimit":268435456}
